{"version":3,"file":"component---src-pages-test-js-6d3231d584c9cee1d54c.js","mappings":"6JA4CA,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAK,MAAMM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EAGP,C,yECQA,UA1CiB,QAAC,KAAEU,GAAM,SACzB,gBAAC,IAAM,KACL,gBAAC,IAAG,CAACX,MAAM,QAEVW,EAAKC,iBAAiBC,MAAMC,KAAIC,IAC/B,MAAMC,EAAUD,EAAKE,KAErB,OACC,gBAAC,WAAc,CAACC,IAAKF,EAAQG,IAC5B,2BACI,0BACC,gBAAC,EAAAC,KAAI,CAACC,GAAE,SAAWL,EAAQG,GAAE,eAC1BH,EAAQM,YAIhB,2BACIN,EAAQO,SAEb,2BACgB,IAGZ,C","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/test.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","// pages/test.js\nimport React from 'react'\nimport { graphql　} from 'gatsby'\n\nimport Layout from '../components/main-layout-ja'\nimport SEO from '../components/seo'\nimport { Link } from 'gatsby';\n\nconst NewsPage = ({ data }) => (\n <Layout>\n   <SEO title=\"テスト\" />\n\n   {data.allMicrocmsPosts.edges.map(edge => {\n     const article = edge.node\n\n     return (\n      <React.Fragment key={article.id}>\n       <div>\n           <h2>\n            <Link to={`/test/${article.id}/index.html`}>\n              {article.title_ja}\n            </Link>\n            </h2>\n       </div>\n       <div>\n          {article.body_ja}\n       </div>\n      <hr />\n     </React.Fragment>\n     )\n   })}\n </Layout>\n)\n\nexport const query = graphql`\n {\n    allMicrocmsPosts(\n     sort: { fields: [id], order: DESC }\n    ) {\n     edges {\n       node {\n         id\n         title_ja\n         body_ja\n       }\n     }\n   }\n }\n`\n\nexport default NewsPage"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","data","allMicrocmsPosts","edges","map","edge","article","node","key","id","Link","to","title_ja","body_ja"],"sourceRoot":""}